name: Build Chrome Bisect Script

on:
  push:
  pull_request:
  schedule:
    - cron: '30 20 * * 6'

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        include:
          - os: ubuntu-18.04
          - os: macos-latest
          - os: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9.7
      - run: python3 -V
      
      - name: Install PyInstaller
        run: |
          pip install --upgrade pip
          pip install wheel
          export url="https://codeload.github.com/pyinstaller/pyinstaller/tar.gz/refs/heads/develop"
          echo "Downloading ${url}"
          curl -o pyinstaller.tar.gz --compressed "${url}"
          tar xvvf pyinstaller.tar.gz
          case "$(uname)" in
            "Linux") osname=linux;;
            "Darwin") osname=macos;;
            *) osname=windows;;
          esac
          if [ $osname == "windows" ]; then
            echo "BEFORE COMPILE"
            sha1sum pyinstaller-*/Pyinstaller/bootloader/*/*
          fi
          ls -l
          cd pyinstaller-*/bootloader
          python3 ./waf all
          cd ..
          python3 setup.py install
          cd ..
          if [ $osname == "windows" ]; then
            echo "AFTER COMPILE"
            sha1sum pyinstaller-*/PyInstaller/bootloader/*/*
          fi

      - name: Install requirements
        run: pip3 install -r requirements.txt
        
      - name: Download bisect script
        run: curl -s --basic -n "https://chromium.googlesource.com/chromium/src/+/master/tools/bisect-builds.py?format=TEXT" | base64 -d > bisect_builds.py
        
      - name: Compile bisect script
        run: |
          export distpath=chrome_bisect/
          pyinstaller -F --distpath $distpath chrome_bisect.py
          $distpath/chrome_bisect --help
          case "$(uname)" in
            "Linux") osname=linux;;
            "Darwin") osname=macos;;
            *) osname=windows;;
          esac
          export archivefile="chrome-bisect-${osname}.zip"
          echo "archive file will be ${archivefile} when zipped."
          if [ "${osname}" == 'windows' ]; then
            /c/Program\ Files/7-Zip/7z.exe a -tzip $archivefile $distpath
          else
            zip -r $archivefile $distpath
          fi

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        if: matrix.os != 'windows-latest' # Mac/Linux upload
        with:
          name: chrome-bisect-${{ matrix.os }}
          path: |
            chrome-bisect-*.zip

      - name: Download artifacts
        if: matrix.os == 'windows-latest' # Windows download
        uses: actions/download-artifact@v2
        
      - name: Set datetime version string
        if: matrix.os == 'windows-latest'
        id: dateversion
        run: |
          echo "::set-output name=dateversion::$(date +'%Y%m%d.%k%M%S')"

      - uses: "marvinpinto/action-automatic-releases@latest"
        if: matrix.os == 'windows-latest'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.dateversion.outputs.dateversion }}
          prerelease: false
          draft: false
          title: "Chrome Bisect ${{ steps.dateversion.outputs.dateversion }}"
          files: |
            chrome-bisect-windows.zip
            chrome-bisect-macos-latest/*
            chrome-bisect-ubuntu-18.04/*
